name: CI Pipeline

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - main

jobs:
  ai-artifact-scan:
    name: "Esc√°ner anti IA"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Buscar palabras de IA prohibidos
        run: |
          grep -RIE --exclude-dir=.git --exclude-dir=.github \
            -e "chatgpt" -e "bard" -e "as an ai" "As and AI lenguage model" "This code was generated by" \
            -e "deepseek" "copilot" "AI" "IA" \
            -e "üß©" -e "üß†" -e "‚úÖ" -e "üß™" . && exit 1 || exit 0

  duplicity-jscpd:
    name: "Duplicidad con jscpd"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Instalar jscpd
        run: npm install -g jscpd
      - name: Ejecutar jscpd (yml, scripts)
        run: |
          jscpd --threshold 30 --min-tokens 10 --pattern "**/*.{yml,sh,py}" --reporters console .

  check-comments:
    name: "Verificar comentarios en espa√±ol"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Buscar comentarios en espa√±ol
        run: |
          # Buscar archivos modificados en el PR
          git fetch origin main:main
          files=$(git diff --name-only main...${{ github.sha }})
          fail=0
          for f in $files; do
            case "$f" in
              *.py|*.sh|*.tf|*.yml)
                # Busca alg√∫n comentario en espa√±ol (palabras comunes)
                if ! grep -E -q "#.*(el|la|en|este|funci√≥n|par√°metro|devuelve|configura|script|modifica|comentario)" "$f"; then
                  echo "Falta comentario en espa√±ol en $f"
                  fail=1
                fi
                ;;
            esac
          done
          if [ "$fail" = "1" ]; then exit 1; fi

  test:
    name: "Tests unitarios"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Configurar entorno Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Instalar dependencias Python
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Ejecutar tests unitarios (pytest)
        run: pytest --maxfail=1 --disable-warnings
      - name: Pruebas pasadas, creando imagen de contenedor
        run: |
          docker build --tag contenedor_pregunta1 -f Pregunta2/Dockerfile .

  lint:
    name: "Linters: flake8"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Instalar flake8
        run: pip install flake8
      - name: Ejecutar flake8
        run: flake8 .
